/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package harsh.librarytest;

import java.sql.*;
import javax.swing.*;
import java.awt.*;

//import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.concurrent.TimeUnit;

/**
 *
 * @author Harsh Kapadia
 */
public class ReturnBook extends javax.swing.JFrame {
    
    static final String DB_URL = "jdbc:mysql://localhost:3306/library_test";
    static final String USER = "root";
    static final String PASS = "037251";
    
    //String issue_date;
    int i_id, fine, diffInDays;
    String issue_date;

    /**
     * Creates new form ReturnBook
     */
    public ReturnBook() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("RETURN BOOK");

        jLabel2.setText("Issue ID:");

        jLabel3.setText("Return Date:");

        jLabel4.setText("(As per system date)");

        jButton1.setText("Proceed and display fine amount");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jButton2)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(39, 39, 39)
                .addComponent(jButton1)
                .addGap(30, 30, 30)
                .addComponent(jButton2)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Check fine amount button
        
        Connection conn = null;
        PreparedStatement pstmt = null;
        //Statement stmt = null;
        try
        {
            //Class.forName("com.mysql.jdbc.Driver");
            System.out.println("Connecting to database...");
            conn = DriverManager.getConnection(DB_URL,USER,PASS);
            System.out.println("Creating statement...");
            //stmt = conn.createStatement();
            
            //System.out.println(jTextField3.getText());
            
            i_id = Integer.parseInt(jTextField1.getText());
            
            String p_sql_1;
            p_sql_1 = "SELECT issued FROM book WHERE book.isbn IN (SELECT issue_book.isbn FROM issue_book WHERE i_id = ?)";
            pstmt = conn.prepareStatement(p_sql_1);
            pstmt.setInt(1, i_id);
            ResultSet rs1 = pstmt.executeQuery();
            
            if(rs1.next())
            {
                if("y".equalsIgnoreCase(rs1.getString("issued")) || "yes".equalsIgnoreCase(rs1.getString("issued")))
                {
                    SimpleDateFormat date_format = new SimpleDateFormat("yyyy-MM-dd");
            
                    java.util.Date returnSysDate = new java.util.Date();
                    System.out.println(date_format.format(returnSysDate));
                    System.out.println(returnSysDate);
                    String return_date = date_format.format(returnSysDate);
                    java.util.Date utilReturnDate = date_format.parse(return_date);
                    java.sql.Date sqlReturnDate = new java.sql.Date(utilReturnDate.getTime());
                    System.out.println(sqlReturnDate);

                    //String sql_1;
                    //sql_1 = "UPDATE book SET issued = 'N' WHERE book.isbn IN (SELECT issue_book.isbn FROM issue_book WHERE issue_book.i_id IN (SELECT return_book.i_id FROM return_book WHERE return_book.i_id = " + i_id + "));";
                    //stmt.executeUpdate(sql_1);

                    String p_sql_2;
                    p_sql_2 = "UPDATE book SET issued = 'N' WHERE book.isbn IN (SELECT issue_book.isbn FROM issue_book WHERE issue_book.i_id IN (SELECT return_book.i_id FROM return_book WHERE return_book.i_id = ?))";
                    pstmt = conn.prepareStatement(p_sql_2);
                    pstmt.setInt(1, i_id);
                    pstmt.executeUpdate();

                    //String sql_2;
                    //sql_2 = "SELECT issue_date FROM issue_book WHERE i_id = " + i_id;
                    //ResultSet rs = stmt.executeQuery(sql_2);
                    //System.out.println("In b/w");

                    String p_sql_3;
                    p_sql_3 = "SELECT issue_date FROM issue_book WHERE i_id = ?";
                    pstmt = conn.prepareStatement(p_sql_3);
                    pstmt.setInt(1, i_id);
                    ResultSet rs2 = pstmt.executeQuery();

                    while(rs2.next())
                    {
                        issue_date = rs2.getString("issue_date");
                        System.out.println(issue_date);
                        java.util.Date utilIssueDate = date_format.parse(issue_date);
                        java.sql.Date sqlIssueDate = new java.sql.Date(utilIssueDate.getTime());
                        System.out.println(sqlIssueDate);

                        int duration  = (int)(sqlIssueDate.getTime() - sqlReturnDate.getTime());
                        diffInDays = (int)TimeUnit.MILLISECONDS.toDays(duration);
                        System.out.println(diffInDays);
                    }


                    if(diffInDays > 7)
                        fine = (diffInDays - 7) * 10;
                    else
                        fine = 0;

                    System.out.println("fine = " + fine);

                    //String sql_3;
                    //sql_3 = "INSERT INTO return_book VALUES(" + i_id + ", '" + sqlReturnDate + "', '" + fine + "')";
                    //stmt.executeUpdate(sql_3);

                    String p_sql_4; 
                    p_sql_4 = "INSERT INTO return_book(i_id, due_date, fine) VALUES(?, ?, ?)";
                    pstmt = conn.prepareStatement(p_sql_4);
                    pstmt.setInt(1, i_id);
                    pstmt.setDate(2, sqlReturnDate);
                    pstmt.setInt(3, fine);
                    pstmt.executeUpdate();

                    String fine_stmt;
                    fine_stmt = "Please pay Rs." + fine + " as fine and return the book.";
                    JOptionPane.showMessageDialog(null, fine_stmt);

                    this.toBack();
                    setVisible(false);
                    new LibrarianActions().toFront();
                    new LibrarianActions().setState(java.awt.Frame.NORMAL);
            
                    rs2.close();
                }
                else
                    JOptionPane.showMessageDialog(null, "Book not issued");
            }
            else
                JOptionPane.showMessageDialog(null, "Book not found in library records.");
            
            
            
            rs1.close();
            pstmt.close();
            conn.close();
        }
        catch(SQLException sqlex) 
        {
            JOptionPane.showMessageDialog(null, sqlex);
        } 
//        catch (ParseException e) {
//            System.out.println(e.toString());
//            e.printStackTrace();
//        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        //catch (ClassNotFoundException cnfex) 
        //{
        //    JOptionPane.showMessageDialog(null, cnfex);
        //}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Back button
        
        this.toBack();
        setVisible(false);
        new LibrarianActions().toFront();
        new LibrarianActions().setState(java.awt.Frame.NORMAL);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReturnBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
